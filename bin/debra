#!/bin/sh

usage() {
	echo "Usage: $(basename $0) init|sourceinstall|build|help [...]" >&2
	if [ -n "$1" ]; then
		echo "  init <dir>" >&2
		echo "    initialize a directory for building debs" >&2
		echo "  sourceinstall <dir> <tarball-uri> [...]" >&2
		echo "    install a source package (sets the prefix automatically)" >&2
		echo "  build <dir> <deb>" >&2
		echo "    build a deb from a directory" >&2
		echo "  help" >&2
		echo "    show this help message" >&2
	fi
	exit 1
}
ACTION=$1
DIRNAME=$2
[ -z "$ACTION" ] && usage
[ -z "$DIRNAME" ] && usage
shift 2
DIRNAME=$(readlink -fn $DIRNAME)

case $ACTION in

	# Initialize a directory for building Debian packages.
	init)
		mkdir -p $DIRNAME
		mkdir $DIRNAME/opt $DIRNAME/DEBIAN
		if [ -f $HOME/.debra ]; then
			cp $HOME/.debra $DIRNAME/DEBIAN/control
		else
			cat <<EOF >$DIRNAME/DEBIAN/control
Package: TODO
Version: TODO
Section: TODO
Priority: optional
Essential: no
Architecture: TODO
Depends: TODO
Pre-Depends: TODO
Recommends: TODO
Suggests: TODO
Conflicts: TODO
Replaces: TODO
Provides: TODO
Installed-Size: TODO
Maintainer: TODO
Description: TODO
EOF
		fi
		;;

	# Install a source package.
	sourceinstall)
		TARBALL=$1
		[ -z "$TARBALL" ] && usage MOAR
		shift
		PACKAGE=$(basename "$TARBALL" \
			| sed -r 's/^(.+)\.(tar\.(bz2|gz)|tgz)$/\1/')
		exec $(dirname $0)/sourceinstall $DIRNAME/opt/$PACKAGE "$TARBALL" "$@"
		;;

	# Build a Debian package from a directory.  Fix incorrect paths (mostly
	# in shebang lines) before running `dpkg`.
	build)
		DEB=$1
		[ -z "$DEB" ] && usage MOAR
		shift
		for PATHNAME in $(grep -rlI $DIRNAME $DIRNAME); do
			mv $PATHNAME $PATHNAME.sav
			sed s/\\/tmp\\/ruby-$$// <$PATHNAME.sav >$PATHNAME
			rm $PATHNAME.sav
		done
		exec dpkg -b $DIRNAME $DEB
		;;

	# Show the detailed help message.
	help)
		usage MOAR
		;;

	# Dispatch actions in external scripts or fall back to the usage message.
	*)
		[ -x $0-$ACTION ] && exec $0-$ACTION $@
		usage

esac

#!/bin/sh

usage() {
	echo "Usage: $(basename $0) <tarball-uri>" >&2
	echo "       [-b <bootstrap>]" >&2
	echo "       [-f <flags>] [-p <prefix>] [-d <destdir>]" >&2
	echo "       [-c <command>] [-h]" >&2
	if [ -n "$1" ]; then
		echo "  -b bootstrap command to run before any others" >&2
		echo "  -f flags passed to configure" >&2
		echo "  -p prefix passed to configure (after other flags)" >&2
		echo "  -d destination directory passed to make as DESTDIR" >&2
		echo "  -c command to run instead of configure && make && make install" >&2
		echo "  -h show this help message" >&2
	fi
	exit 1
}
TARBALL=$1
[ -z "$TARBALL" ] && usage
[ -h = $TARBALL ] && usage MOAR
shift
while getopts b:f:p:c:d:h name; do
	case "$name" in
		b) BOOTSTRAP=$OPTARG;;
		f) FLAGS=$OPTARG;;
		p) PREFIX=$OPTARG;;
		d) DESTDIR=$OPTARG;;
		c) COMMAND=$OPTARG;;
		h) usage MOAR;;
		*) usage;;
	esac
done

# Figure out which flag to pass to tar because it can't figure out the type
# of an archive that comes on stdin.
if echo "$TARBALL" | egrep '\.bz2'; then
	TARFLAG=j
else
	TARFLAG=z
fi

# Fetch and untar into a safe directory.
mkdir /tmp/sourceinstall-$$
cd /tmp/sourceinstall-$$
if [ -f "$OLDPWD/$TARBALL" ]; then
	tar xf "$OLDPWD/$TARBALL"
else
	wget -O - "$TARBALL" | tar x$TARFLAG
fi
cd *

# Bootstrap, if requested.
[ -n "$BOOTSTRAP" ] && eval $BOOTSTRAP

# If no custom command was supplied, configure, make, and make install.
# Otherwise, run the custom command.
if [ -z "$COMMAND" ]; then
	if [ -z "$PREFIX" ]; then
		./configure $FLAGS
	else
		./configure $FLAGS --prefix=$(readlink -f $PREFIX)
	fi
	make
	if [ -z "$DESTDIR" ]; then
		make install
	else
		make install DESTDIR=$DESTDIR
	fi
else
	eval $COMMAND
fi

# Remove the build files.
cd /tmp
rm -rf /tmp/sourceinstall-$$
